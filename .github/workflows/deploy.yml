name: Deploy to EKS

on:
    push:
      branches:
        - deploy
        - main
    workflow_dispatch: 

permissions: 
  contents: read

jobs:

  Deploy-To-EKS:
    runs-on: ubuntu-latest
    outputs:
      ingress_ip: ${{ steps.ingress.outputs }}

    steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Install kubectl CLI
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.30.0'

        - name: Install AWS cli
          id: install-aws-cli
          uses: unfor19/install-aws-cli-action@master
          with:
            version: '2.17.13'

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

        - name: Create a KUBECONFIG
          run: |
            aws eks update-kubeconfig --region us-east-1 --name demo-eks

        - name: Get Ingress IP
          run: |
            INGRESS_IP=$(kubectl get service ingress-nginx-controller --namespace=ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            echo "INGRESS_IP=$INGRESS_IP" >> $GITHUB_ENV

        - name: Share Ingress IP
          id: ingress
          run: echo "INGRESS_IP=${{ env.INGRESS_IP }}" >> "$GITHUB_OUTPUT"


        - name: Replace Token in Manifest file
          uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/*.*"]'
          env:
            INGRESS-IP:  ${{ env.INGRESS_IP }}
            IMAGE: ${{ secrets.DOCKER_USERNAME }}/flask-batot:${{github.sha}}

        - name: Check the Manifest file content
          run: |
            cat test-k8s.yml

        - name: Deploy to Dev Env
          run: |
            kubectl apply -f kubernetes/.


  notify:
    runs-on: ubuntu-latest
    needs: Deploy-To-EKS

    steps:
      - name: Deployment is DONE
        env:
          ingress_ip: ${{ needs.Deploy-To-EKS.outputs.ingress_ip }}
        uses: rjstone/discord-webhook-notify@v1.0.4
        with:
          severity: info
          color: '#464AD4'
          details: "###  > - **Deployment of Flask APP to EKS is DONE and Here is the url of it : ** http://${{env.ingress_ip}}"
          
          footer:  "BATOT is UP"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}

        
          
